//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.3

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};
use serde_with_macros::skip_serializing_none;
use ts_rs::TS;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "password")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub username: String,
    pub password: String,
    pub website: String,
    pub website_url: Option<String>,
    pub website_icon_url: Option<String>,
    pub r#type: PasswordType,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

#[derive(EnumIter, Serialize, Deserialize, TS, Debug, Clone, PartialEq, DeriveActiveEnum, Eq)]
#[skip_serializing_none]
#[ts(export, export_to = "../src/bindings/")]
#[sea_orm(rs_type = "String", db_type = "String(Some(1))")]
pub enum PasswordType {
    #[sea_orm(string_value = "Login")]
    Login,
    #[sea_orm(string_value = "Card")]
    Card,
    #[sea_orm(string_value = "Identity")]
    Identity,
}

impl ActiveModelBehavior for ActiveModel {}
